{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Dev Notes For full documentation visit mkdocs.org . Notes Atom CS Basics Scrum LaTeX Time Management Virtual Environment Django Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Dev Notes"},{"location":"#dev-notes","text":"For full documentation visit mkdocs.org .","title":"Dev Notes"},{"location":"#notes","text":"Atom CS Basics Scrum LaTeX Time Management Virtual Environment Django","title":"Notes"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"atom/","text":"Atom Best Practices Favorite packages latex // Compile LaTeX documents from within Atom language-latex // Syntax highlighting for LaTeX for Atom less-than-slash // Adds automatic closing of HTML tags pigments // A package to display colors in project and files color-picker // Right click or press CMD-SHIFT-C/CTRL-ALT-C to open it linter-chktex // Linter plugin for LaTeX, using chktex minimap // A preview of the full source code atom-beautify prettier-atom atom-spotify2 atom-transpose case-keep-replace change-case copy-path duplicate-line-or-selection editorconfig file-icons git-plus highlight-selected local-history project-manager related set-syntax sort-lines sublime-style-column-selection tab-foldername-index sync-settings toggle-quotes atom-wrap-in-tag atom-ternjs autoclose-html autocomplete-modules docblockr emmet emmet-jsx-css-modules es6-javascript js-hyperclick hyperclick linter-eslint tree-view-copy-relative-path lodash-snippets language-babel react-es7-snippets atom-jest-snippets one-dark-ui dracula-theme Install script Just install from the command line... apm install latex language-latex less-than-slash pigments color-picker linter-chktex minimap atom-beautify prettier-atom atom-spotify2 atom-transpose case-keep-replace change-case copy-path duplicate-line-or-selection editorconfig file-icons git-plus highlight-selected local-history project-manager related set-syntax sort-lines sublime-style-column-selection tab-foldername-index sync-settings toggle-quotes atom-wrap-in-tag atom-ternjs autoclose-html autocomplete-modules docblockr emmet emmet-jsx-css-modules es6-javascript js-hyperclick hyperclick linter-eslint tree-view-copy-relative-path lodash-snippets language-babel react-es7-snippets atom-jest-snippets one-dark-ui dracula-theme","title":"Atom Best Practices"},{"location":"atom/#atom-best-practices","text":"","title":"Atom Best Practices"},{"location":"atom/#favorite-packages","text":"latex // Compile LaTeX documents from within Atom language-latex // Syntax highlighting for LaTeX for Atom less-than-slash // Adds automatic closing of HTML tags pigments // A package to display colors in project and files color-picker // Right click or press CMD-SHIFT-C/CTRL-ALT-C to open it linter-chktex // Linter plugin for LaTeX, using chktex minimap // A preview of the full source code atom-beautify prettier-atom atom-spotify2 atom-transpose case-keep-replace change-case copy-path duplicate-line-or-selection editorconfig file-icons git-plus highlight-selected local-history project-manager related set-syntax sort-lines sublime-style-column-selection tab-foldername-index sync-settings toggle-quotes atom-wrap-in-tag atom-ternjs autoclose-html autocomplete-modules docblockr emmet emmet-jsx-css-modules es6-javascript js-hyperclick hyperclick linter-eslint tree-view-copy-relative-path lodash-snippets language-babel react-es7-snippets atom-jest-snippets one-dark-ui dracula-theme","title":"Favorite packages"},{"location":"atom/#install-script","text":"Just install from the command line... apm install latex language-latex less-than-slash pigments color-picker linter-chktex minimap atom-beautify prettier-atom atom-spotify2 atom-transpose case-keep-replace change-case copy-path duplicate-line-or-selection editorconfig file-icons git-plus highlight-selected local-history project-manager related set-syntax sort-lines sublime-style-column-selection tab-foldername-index sync-settings toggle-quotes atom-wrap-in-tag atom-ternjs autoclose-html autocomplete-modules docblockr emmet emmet-jsx-css-modules es6-javascript js-hyperclick hyperclick linter-eslint tree-view-copy-relative-path lodash-snippets language-babel react-es7-snippets atom-jest-snippets one-dark-ui dracula-theme","title":"Install script"},{"location":"cs-basics/","text":"CS Basics Data Hierarchy Bit Character Field Record File Bits Smallest data item. Value is 0 or 1. Short for \"binary\" digit. Ways you can manipulate a bit's value: examining, setting, reversing Record Group of related fields implemented as a class in Java. Example record: name | pay rate | job title Anne | 25.00 | supervisor File A group of related records. (More generally, arbitrary data in arbitrary formats.) Sometimes... simply a sequence of bytes. Field Group of chars or bytes. Name field, age field. ASCII 128 chars encoded into 7-bit binary integers. Hardware Memory Unit Fast, low-capacity. Volatile (aka lost at shutdown). Main memory RAM Typically 8 GB on desktop computer Stores data for quick access by the processor. aka = RAM, memory, main memory, primary storage, main storage Arithmetic and Logic Unit ALU Performs calculations. Compares two values (decision). ALU usually implemented in the CPU. Central Processing Unit CPU Coordinates logical unit operations aka \"processor\" E.g. dual core processor = 2 CPUs Software method: houses the program statements that actually perform its tasks class: houses the set of methods that perform the class's tasks instantiation: the process of building an object of a class object: instance of a class; class methods can only be called on objects of that class method call: tells a method of the object to run (perform tasks defined in method) encapsulation: implementation details hidden within the object attributes: object's defining characteristics; specified by instance variables of a class inheritance: new class absorbs characteristics of pre-existing class; can customize; can add kernel: software containing core components of the OS Java class libraries aka Java APIs Collection of existing classes and methods. JVM Java Virtual Machine App that simulates a computer. Hides the underlying operating system and hardware from the programs that interact with it. JVM's class loader takes .class files of program's byte codes and transfers them to main memory. Theorems \"Structured Programming Theorem\" aka Bohm-Jacopini Theorem Combine subprograms in only 3 specific ways -- control structures. Control structures: 1. sequence 2. selection 3. iteration","title":"CS Basics"},{"location":"cs-basics/#cs-basics","text":"","title":"CS Basics"},{"location":"cs-basics/#data","text":"Hierarchy Bit Character Field Record File","title":"Data"},{"location":"cs-basics/#bits","text":"Smallest data item. Value is 0 or 1. Short for \"binary\" digit. Ways you can manipulate a bit's value: examining, setting, reversing","title":"Bits"},{"location":"cs-basics/#record","text":"Group of related fields implemented as a class in Java. Example record: name | pay rate | job title Anne | 25.00 | supervisor","title":"Record"},{"location":"cs-basics/#file","text":"A group of related records. (More generally, arbitrary data in arbitrary formats.) Sometimes... simply a sequence of bytes.","title":"File"},{"location":"cs-basics/#field","text":"Group of chars or bytes. Name field, age field.","title":"Field"},{"location":"cs-basics/#ascii","text":"128 chars encoded into 7-bit binary integers.","title":"ASCII"},{"location":"cs-basics/#hardware","text":"","title":"Hardware"},{"location":"cs-basics/#memory-unit","text":"Fast, low-capacity. Volatile (aka lost at shutdown). Main memory RAM Typically 8 GB on desktop computer Stores data for quick access by the processor. aka = RAM, memory, main memory, primary storage, main storage","title":"Memory Unit"},{"location":"cs-basics/#arithmetic-and-logic-unit","text":"ALU Performs calculations. Compares two values (decision). ALU usually implemented in the CPU.","title":"Arithmetic and Logic Unit"},{"location":"cs-basics/#central-processing-unit","text":"CPU Coordinates logical unit operations aka \"processor\" E.g. dual core processor = 2 CPUs","title":"Central Processing Unit"},{"location":"cs-basics/#software","text":"method: houses the program statements that actually perform its tasks class: houses the set of methods that perform the class's tasks instantiation: the process of building an object of a class object: instance of a class; class methods can only be called on objects of that class method call: tells a method of the object to run (perform tasks defined in method) encapsulation: implementation details hidden within the object attributes: object's defining characteristics; specified by instance variables of a class inheritance: new class absorbs characteristics of pre-existing class; can customize; can add kernel: software containing core components of the OS","title":"Software"},{"location":"cs-basics/#java-class-libraries","text":"aka Java APIs Collection of existing classes and methods.","title":"Java class libraries"},{"location":"cs-basics/#jvm","text":"Java Virtual Machine App that simulates a computer. Hides the underlying operating system and hardware from the programs that interact with it. JVM's class loader takes .class files of program's byte codes and transfers them to main memory.","title":"JVM"},{"location":"cs-basics/#theorems","text":"\"Structured Programming Theorem\" aka Bohm-Jacopini Theorem Combine subprograms in only 3 specific ways -- control structures. Control structures: 1. sequence 2. selection 3. iteration","title":"Theorems"},{"location":"curl/","text":"cURL \"Client URL\" How to use CURL on Windows | How to test API with CURL | CURL Basics Step by Step https:/cURL \"Client URL\" How to use CURL on Windows | How to test API with CURL | CURL Basics Step by Step https://www.youtube.com/watch?v=8f9DfgRGOBo A library and command-line tool for transferring data using various protocols. A tool to transfer data from or to a server, using one of the supported protocols (DICT, FILE, FTP, FTPS, GOPHER, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET and TFTP). The command is designed to work without user interaction. The cURL project produces two products, libcurl and cURL./www.youtube.com/watch?v=8f9DfgRGOBo A library and command-line tool for transferring data using various protocols. A tool to transfer data from or to a server, using one of the supported protocols (DICT, FILE, FTP, FTPS, GOPHER, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET and TFTP). The command is designed to work without user interaction. The cURL project produces two products, libcurl and cURL.","title":"Curl"},{"location":"django/","text":"Django Getting Started Starting the Django server $ python manage.py runserver localhost:8003 http://localhost:8003/","title":"Django"},{"location":"django/#django","text":"","title":"Django"},{"location":"django/#getting-started","text":"","title":"Getting Started"},{"location":"django/#starting-the-django-server","text":"$ python manage.py runserver localhost:8003 http://localhost:8003/","title":"Starting the Django server"},{"location":"latex/","text":"LaTeX https://tex.stackexchange.com/questions/107599/what-is-miktex // This has links to several useful resources. TeX is a computer program for typesetting documents, created by D. E. Knuth. LaTeX, written by L. B. Lamport, is a 'dialect' of TeX. It is suited to long articles and books, since it has facilities for the automatic numbering of chapters, sections, theorems, equations etc., and also has facilities for cross-referencing. MikTeX is a distribution of TeX for Windows, and everything you need to run LaTeX is in MikTeX. TeXworks is the editor that comes with MikTeX. XeLaTeX is essentially a replacement for pdfLaTeX. https://www.maths.tcd.ie/~dwilkins/LaTeXPrimer/ Compiling a latex documents may take several steps when bibtex is used with latex. However, this latex compilation process is the same for most documents. We can make it a template with Makefile so that simply running make will generate the dvi/ps/pdf files for us. Books: LaTeX Cookbook: Has example thesis, book, presentation, CV ... By default, when make looks for the makefile, it tries the following names, in order: GNUmakefile, makefile and Makefile.","title":"Latex"},{"location":"scrum/","text":"Scrum Ceremony Checklist Invites Ceremony Date Time [ ] PO Grooming [ ] Dev Grooming [ ] Pre-planning [ ] Dry Run [ ] Sprint Review [ ] Retrospective [ ] Planning","title":"Scrum"},{"location":"scrum/#scrum","text":"","title":"Scrum"},{"location":"scrum/#ceremony-checklist","text":"Invites Ceremony Date Time [ ] PO Grooming [ ] Dev Grooming [ ] Pre-planning [ ] Dry Run [ ] Sprint Review [ ] Retrospective [ ] Planning","title":"Ceremony Checklist"},{"location":"time-management/","text":"Time Management Parkinson's Law Work expands so as to fill the time available for its completion. Student\ufffds Syndrome A tendency to delay starting an assignment until it is almost too late to get it done on time. Murphy's Law If something can go wrong, it will. Backend Load Little work on the task in the early part of assigned time followed by colossal effort in the last minute. Negative outcomes: Overshooting the deadline Insufficient solution Low-quality solution Uniform Load Completing equal parts of the task in equal intervals of time. Potential problems: Accuracy of estimate Measure of progress No protection from Murphy Frontend Load Doing as much of the task as possible right up front. Ensures the solution is complete, of good quality, and even if the task is not tangible or the estimate was inaccurate, with most of the task done, the chances of hitting the estimate are very good. Focus of this technique: Address the largest, most significant, most complex, or riskiest part of the task first (risk includes the risk of delay). Time-slice units: Plan periodic targets. Setting these milestones will ensure that the task is proceeding as desired. Frontend load has the following advantages: It reduces the probability of overshooting the deadline (it is still possible to overshoot the deadline if the estimate were inaccurate or if the scope suddenly increased). It does not require compromises such as reduced quality or sufficiency. This method provides some insulation against Murphy's Law. Frontend load counters the limitation of uniform load by: Addressing the most significant part of the task first balances inaccuracies of estimation Use of the time-slice units ensures accurate measure of progress Changing your perspective When you see a mountain in the distance, it appears as small as a molehill, but when it is mere feet away, it is large. Similarly, when a deadline is far away in time, it is a mere molehill, but when it looms ahead, it appears as a mountain. The mind gives only as much attention to a task as its perceived size. When it is a molehill, the mind ignores it. As the task grows in size as the deadline draws nearer, the mind turns its attention upon it. To overcome issues arising from this way of thinking, you can use what I call the perspective strategy for efficiency. If you were driving on a deserted highway and you notice a rock in the middle of the road about a mile away, you will not adjust your speed or direction until it looms near you. Similarly, when we look at a task along the time dimension, we will not react to the deadline until it looms large in front of us. People tend to look at tasks along the time dimension. To counter this, let us take a look at the task without any thought to the time available for its completion. Now, the task will grab our attention, we will see its true size, we will attack it, whittle it down to size, then overcome it. According to Nathaniel Kleitman, the human brain works best with a 20-minute break after 90 minutes of work. Others like Dr. Ernest Rossi have noted the 90-minute cycles, with peak focus for about 45 minutes. Tony Schwartz of the Energy Project recommends three 90-minute sessions in 8 hours of work. The verdict is out\ufffddon't work for more than 90 minutes at a time on any task. What if you do go beyond the 90-minute recommendation? Two things happen. First, your productivity drops sharply. Second, you are a sitting target for the next distraction that waits around the corner. What is the alternative? The alternative is to deliberately distract yourself. Here is how it works: 1. Make a list of short tasks (10-15 minutes). This is the \"deliberate distractions\" list. 2. Set a timer for 75 minutes 3. After the timer signals you, bring the main task to a logical pause, that is, a safe state to be interrupted. Make a note of all the things that would enable you to resume the task easily. 4. Take a 20-minute break. 5. Complete one of the tasks on your list of deliberate distractions. 6. Restart the 75-minute timer and resume the main task. This is a very powerful tool to control brain fatigue. Exercises The first exercise in this chapter is a discussion to identify time wasters not listed in earlier sections. This discussion serves to extend the list and also to make the students aware of and be alert for potential time traps. The second exercise in this chapter is to identify one occasion in your lives when you did not meet a deadline, identify reason(s) why things took longer than assigned or estimated, discover how you could have recognized the time trap(s), and come up with strategies to avoid the time trap(s) or recover from it (them) when it (they) occur(s). The third exercise is an on-going activity\ufffdto keep track of time wasters and devise strategies for avoidance and recovery. From Stressaholics book: Time management experts have estimated that it can take up to 20 minutes to recover from a distraction, with more complex tasks taking a greater toll on what's called switch cost \ufffdthe time taken to adjust mental settings and competition due to carrying over mental controls from the previous task. Why Focus is So Important Without focus, tasks end up getting stretched out over a very long period of time. Distractions that break our focus\ufffdor prevent us from ever getting it\ufffdend up costing us more than the time they take away. If you have to constantly stop and start, you\ufffdll be forced to go at a much slower speed overall. Not Easy to Get Into Focus Mode If you want to get into a focused mode, you have to realize that it isn\ufffdt an instant switch that you can flip. To get into it, you have to push through the initial pain of contorting your mind to a single task. You have to realize that the pain and discomfort is only temporary and doesn\ufffdt really last that long. Book recommendation: Kanban in Action, The War of Art, Drive Kanban board tool (has built-in Pomodoro timer): http://simpleprogrammer.com/ss-kanbanflow Planning Technique Quarterly \ufffd Choose a project to do over next three months. \ufffd List all the steps/tasks necessary to achieve it. \ufffd Assign a time value to each step. \ufffd Put steps in sequential order. Monthly \ufffd Print out calendar for the month. \ufffd Take items from quarterly outline and schedule them into the calendar. Weekly Make Kanban board with these columns: - To Do - Monday - Tuesday - Wednesday - Thursday - Friday - Done - Next Week (optional) Vacations from Planning Sometimes good to spend a week just coasting at work, where you just work on whatever you want and you don\ufffdt measure your productivity. Quotas This idea is the core of the system. You don\ufffdt leave yourself any choice but to do what you set out to do. In your mind, failure can\ufffdt be an option. The whole system falls apart if your commitment is weak, so you have to choose attainable and maintainable quotas. Well, if you\ufffdre having trouble with multitasking during the day because there are multiple tasks you have to get done, you\ufffdll probably be better off learning how to batch those tasks and work on a series of related tasks all at once rather than splitting them up throughout the day. Time Wasters I found that by replacing the time I was spending watching TV with working on this project that I enjoyed, I was getting a lot more done and I was feeling better about it. \ufffdLandmines\ufffd TV Social media Emails Meetings Cooking Videogames Coffee breaks Track your time to see where you are \ufffdwasting\ufffd it.","title":"Time management"},{"location":"time-management/#time-management","text":"Parkinson's Law Work expands so as to fill the time available for its completion. Student\ufffds Syndrome A tendency to delay starting an assignment until it is almost too late to get it done on time. Murphy's Law If something can go wrong, it will.","title":"Time Management"},{"location":"time-management/#backend-load","text":"Little work on the task in the early part of assigned time followed by colossal effort in the last minute. Negative outcomes: Overshooting the deadline Insufficient solution Low-quality solution","title":"Backend Load"},{"location":"time-management/#uniform-load","text":"Completing equal parts of the task in equal intervals of time. Potential problems: Accuracy of estimate Measure of progress No protection from Murphy","title":"Uniform Load"},{"location":"time-management/#frontend-load","text":"Doing as much of the task as possible right up front. Ensures the solution is complete, of good quality, and even if the task is not tangible or the estimate was inaccurate, with most of the task done, the chances of hitting the estimate are very good. Focus of this technique: Address the largest, most significant, most complex, or riskiest part of the task first (risk includes the risk of delay). Time-slice units: Plan periodic targets. Setting these milestones will ensure that the task is proceeding as desired. Frontend load has the following advantages: It reduces the probability of overshooting the deadline (it is still possible to overshoot the deadline if the estimate were inaccurate or if the scope suddenly increased). It does not require compromises such as reduced quality or sufficiency. This method provides some insulation against Murphy's Law. Frontend load counters the limitation of uniform load by: Addressing the most significant part of the task first balances inaccuracies of estimation Use of the time-slice units ensures accurate measure of progress Changing your perspective When you see a mountain in the distance, it appears as small as a molehill, but when it is mere feet away, it is large. Similarly, when a deadline is far away in time, it is a mere molehill, but when it looms ahead, it appears as a mountain. The mind gives only as much attention to a task as its perceived size. When it is a molehill, the mind ignores it. As the task grows in size as the deadline draws nearer, the mind turns its attention upon it. To overcome issues arising from this way of thinking, you can use what I call the perspective strategy for efficiency. If you were driving on a deserted highway and you notice a rock in the middle of the road about a mile away, you will not adjust your speed or direction until it looms near you. Similarly, when we look at a task along the time dimension, we will not react to the deadline until it looms large in front of us. People tend to look at tasks along the time dimension. To counter this, let us take a look at the task without any thought to the time available for its completion. Now, the task will grab our attention, we will see its true size, we will attack it, whittle it down to size, then overcome it. According to Nathaniel Kleitman, the human brain works best with a 20-minute break after 90 minutes of work. Others like Dr. Ernest Rossi have noted the 90-minute cycles, with peak focus for about 45 minutes. Tony Schwartz of the Energy Project recommends three 90-minute sessions in 8 hours of work. The verdict is out\ufffddon't work for more than 90 minutes at a time on any task. What if you do go beyond the 90-minute recommendation? Two things happen. First, your productivity drops sharply. Second, you are a sitting target for the next distraction that waits around the corner. What is the alternative? The alternative is to deliberately distract yourself. Here is how it works: 1. Make a list of short tasks (10-15 minutes). This is the \"deliberate distractions\" list. 2. Set a timer for 75 minutes 3. After the timer signals you, bring the main task to a logical pause, that is, a safe state to be interrupted. Make a note of all the things that would enable you to resume the task easily. 4. Take a 20-minute break. 5. Complete one of the tasks on your list of deliberate distractions. 6. Restart the 75-minute timer and resume the main task. This is a very powerful tool to control brain fatigue. Exercises The first exercise in this chapter is a discussion to identify time wasters not listed in earlier sections. This discussion serves to extend the list and also to make the students aware of and be alert for potential time traps. The second exercise in this chapter is to identify one occasion in your lives when you did not meet a deadline, identify reason(s) why things took longer than assigned or estimated, discover how you could have recognized the time trap(s), and come up with strategies to avoid the time trap(s) or recover from it (them) when it (they) occur(s). The third exercise is an on-going activity\ufffdto keep track of time wasters and devise strategies for avoidance and recovery. From Stressaholics book: Time management experts have estimated that it can take up to 20 minutes to recover from a distraction, with more complex tasks taking a greater toll on what's called switch cost \ufffdthe time taken to adjust mental settings and competition due to carrying over mental controls from the previous task. Why Focus is So Important Without focus, tasks end up getting stretched out over a very long period of time. Distractions that break our focus\ufffdor prevent us from ever getting it\ufffdend up costing us more than the time they take away. If you have to constantly stop and start, you\ufffdll be forced to go at a much slower speed overall. Not Easy to Get Into Focus Mode If you want to get into a focused mode, you have to realize that it isn\ufffdt an instant switch that you can flip. To get into it, you have to push through the initial pain of contorting your mind to a single task. You have to realize that the pain and discomfort is only temporary and doesn\ufffdt really last that long. Book recommendation: Kanban in Action, The War of Art, Drive Kanban board tool (has built-in Pomodoro timer): http://simpleprogrammer.com/ss-kanbanflow Planning Technique Quarterly \ufffd Choose a project to do over next three months. \ufffd List all the steps/tasks necessary to achieve it. \ufffd Assign a time value to each step. \ufffd Put steps in sequential order. Monthly \ufffd Print out calendar for the month. \ufffd Take items from quarterly outline and schedule them into the calendar. Weekly Make Kanban board with these columns: - To Do - Monday - Tuesday - Wednesday - Thursday - Friday - Done - Next Week (optional) Vacations from Planning Sometimes good to spend a week just coasting at work, where you just work on whatever you want and you don\ufffdt measure your productivity. Quotas This idea is the core of the system. You don\ufffdt leave yourself any choice but to do what you set out to do. In your mind, failure can\ufffdt be an option. The whole system falls apart if your commitment is weak, so you have to choose attainable and maintainable quotas. Well, if you\ufffdre having trouble with multitasking during the day because there are multiple tasks you have to get done, you\ufffdll probably be better off learning how to batch those tasks and work on a series of related tasks all at once rather than splitting them up throughout the day. Time Wasters I found that by replacing the time I was spending watching TV with working on this project that I enjoyed, I was getting a lot more done and I was feeling better about it. \ufffdLandmines\ufffd TV Social media Emails Meetings Cooking Videogames Coffee breaks Track your time to see where you are \ufffdwasting\ufffd it.","title":"Frontend Load"},{"location":"user-stories/","text":"User Stories User stories should be: \u2022 Independent \u2022 Negotiable \u2022 Valuable \u2022 Estimable \u2022 Small \u2022 Testable Stories usually comprised of: 1. A story card 2. Any conversations between the customer and team 3. After delivery, customer confirmation that delivery meets acceptance criteria. Stories should include: WHO wants a feature. It is good practice to write the \u2018Who\u2019 statement in the stories from the perspective of an any person or group who will interact with the features being created. WHAT feature they want. WHY they want the feature. This may be tied into a business case if one exists. Acceptance Criteria: This is normally a list of questions, scenarios or examples that enable the customer to sign off the story as \u2018done\u2019. On Kanboard: Summary As a ,/ I want ,/ so that . Acceptance Criteria Given ,/ when ,/ then . Stories define what's required from the team by the customer and stakeholders. A story is not a detailed specification of a requirement. It's a reminder that a feature needs to be delivered. Notes from Ben It's supposed to be the product owner (Bruce) who writes the stories, and the developers are supposed to ask questions to verify they understand. However, in practice, Ben and Bruce just sort of know what needs to be done, and have a hard time putting it into \"story form.\" Talk to Brittney. She wrote great stories for EPMA project. Dakota would also like to be there if she provides training on this. Notes from D9K D9K says an \"8\" is one person, one sprint. 1 pt = 6 hrs = .60 x one 10-hr day 4 pts per week Sprints are two weeks, so 4 story points per week.","title":"User Stories"},{"location":"user-stories/#user-stories","text":"","title":"User Stories"},{"location":"user-stories/#user-stories-should-be","text":"\u2022 Independent \u2022 Negotiable \u2022 Valuable \u2022 Estimable \u2022 Small \u2022 Testable","title":"User stories should be:"},{"location":"user-stories/#stories-usually-comprised-of","text":"1. A story card 2. Any conversations between the customer and team 3. After delivery, customer confirmation that delivery meets acceptance criteria.","title":"Stories usually comprised of:"},{"location":"user-stories/#stories-should-include","text":"WHO wants a feature. It is good practice to write the \u2018Who\u2019 statement in the stories from the perspective of an any person or group who will interact with the features being created. WHAT feature they want. WHY they want the feature. This may be tied into a business case if one exists. Acceptance Criteria: This is normally a list of questions, scenarios or examples that enable the customer to sign off the story as \u2018done\u2019.","title":"Stories should include:"},{"location":"user-stories/#on-kanboard","text":"","title":"On Kanboard:"},{"location":"user-stories/#summary","text":"As a ,/ I want ,/ so that .","title":"Summary"},{"location":"user-stories/#acceptance-criteria","text":"Given ,/ when ,/ then . Stories define what's required from the team by the customer and stakeholders. A story is not a detailed specification of a requirement. It's a reminder that a feature needs to be delivered.","title":"Acceptance Criteria"},{"location":"user-stories/#notes-from-ben","text":"It's supposed to be the product owner (Bruce) who writes the stories, and the developers are supposed to ask questions to verify they understand. However, in practice, Ben and Bruce just sort of know what needs to be done, and have a hard time putting it into \"story form.\" Talk to Brittney. She wrote great stories for EPMA project. Dakota would also like to be there if she provides training on this.","title":"Notes from Ben"},{"location":"user-stories/#notes-from-d9k","text":"D9K says an \"8\" is one person, one sprint. 1 pt = 6 hrs = .60 x one 10-hr day 4 pts per week Sprints are two weeks, so 4 story points per week.","title":"Notes from D9K"},{"location":"virtual-env/","text":"Virtual Environment Install $ mkdir Environments $ virtualenv --version # Check the install $ virtualenv <test-environment> # If you only have Python 3 on your machine $ source <test-environment>/bin/activate Remove $ cd <test-environment> $ deactivate $ cd .. $ sudo rm -rf <test-environment> Resources https://docs.djangoproject.com/en/3.0/intro/contributing/ https://realpython.com/python-virtual-environments-a-primer/ https://djangocentral.com/how-to-a-create-virtual-environment-for-python/","title":"Virtual Environment"},{"location":"virtual-env/#virtual-environment","text":"","title":"Virtual Environment"},{"location":"virtual-env/#install","text":"$ mkdir Environments $ virtualenv --version # Check the install $ virtualenv <test-environment> # If you only have Python 3 on your machine $ source <test-environment>/bin/activate","title":"Install"},{"location":"virtual-env/#remove","text":"$ cd <test-environment> $ deactivate $ cd .. $ sudo rm -rf <test-environment>","title":"Remove"},{"location":"virtual-env/#resources","text":"https://docs.djangoproject.com/en/3.0/intro/contributing/ https://realpython.com/python-virtual-environments-a-primer/ https://djangocentral.com/how-to-a-create-virtual-environment-for-python/","title":"Resources"}]}